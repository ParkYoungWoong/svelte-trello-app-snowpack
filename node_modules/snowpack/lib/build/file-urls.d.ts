import { MountEntry, SnowpackConfig } from '../types/snowpack';
export declare const defaultFileExtensionMapping: {
    '.mjs': string;
    '.jsx': string;
    '.ts': string;
    '.tsx': string;
    '.vue': string;
    '.svelte': string;
    '.mdx': string;
    '.svx': string;
    '.elm': string;
    '.yaml': string;
    '.toml': string;
    '.php': string;
    '.md': string;
    '.ejs': string;
    '.njk': string;
    '.scss': string;
    '.sass': string;
    '.less': string;
};
/**
 * Map a file path to the hosted URL for a given "mount" entry.
 */
export declare function getUrlForFileMount({ fileLoc, mountKey, mountEntry, config, }: {
    fileLoc: string;
    mountKey: string;
    mountEntry: MountEntry;
    config: SnowpackConfig;
}): string;
/**
 * Get the final, hosted URL path for a given file on disk.
 */
export declare function getMountEntryForFile(fileLoc: string, config: SnowpackConfig): [string, MountEntry] | null;
/**
 * Get the final, hosted URL path for a given file on disk.
 */
export declare function getUrlForFile(fileLoc: string, config: SnowpackConfig): string | null;
